# This is a basic workflow to help you get started with Actions

name: test

# Controls when the action will run.
on: push
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        neovim: [false, true]
        version: ['nightly', 'stable']
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        use_gh_cli: [false, true]
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: thinca/vim-themis
          path: vim-themis
      - name: Setup vim
        id: vim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: ${{ matrix.neovim }}
          version: ${{ matrix.version }}
      - name: Write gh cli config file for test and check path
        if: ${{ matrix.use_gh_cli }}
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          import os
          import subprocess
          from os.path import expanduser

          process = subprocess.Popen(["gh", "auth", "login", "--with-token"], stdin=subprocess.PIPE)
          process.communicate(input=os.environ["TOKEN"].encode())
          retcode = process.poll()
          if retcode:
            exit(1)

          home = expanduser("~")
          with open(os.path.join(home, ".config", "gh", "hosts.yml")) as cfg:
            assert cfg.read()
        shell: python
      - name: Run unit tests with themis.vim
        env:
          THEMIS_VIM: ${{ steps.vim.outputs.executable }}
          USE_GH_CLI: ${{ matrix.use_gh_cli }}
        run: ./vim-themis/bin/themis -r
